Parte 01) 7.5 pontos ------- OK
Entrega e apresentação: 26/04/2019 (sex)

OK	-[6.0] Implementar um modelador
OK	  -[2.5] implementacao orientada a objeto (definir uma classe Objeto)
OK	    -[1.0] heranca
	      -definir um método desenhar (virtual)
		-a ser implementado por classes mais específicas (herdando da classe Objeto)
		  -por exemplo: Arvore, ...
OK	    -[0.5] transformacoes
	      -incluir atributos referentes às possíveis transformações
		-translação/rotação/escala
OK	    -[0.5] selecao
	      -incluir um atributo na classe Objeto para dizer se o objeto está ou não selecionado
		-se deve ou não ser pintado com uma cor de destaque (branco, por exemplo)
		-usá-lo como teste no método desenhar
OK	    -[0.5] sist local de referencia
	      -incluir um atributo na classe Objeto para alternar entre desenhar ou não os eixos do sist local do objeto
		-usá-lo como teste no método desenhar
OK	  -[1.5] manipulacao do vetor de Objetos
OK	    -[0.5] permitir incluir objetos nesse vetor (usando o teclado)
	      -permitir incluir objetos independentes, inclusive do mesmo tipo (mesma classe filha)
		-cada tipo de objeto deve ser associado a uma tecla diferente
	      -objetos devem ser incluidos com seu centro coincidindo com a origem do sist local
		-seu sist local deve estar inicialmente alinhado com o sist global
		-usar o proprio modelador implementado, durante sua execucao, para posicionar cada objeto (selecionado) no cenario
OK	    -[0.5] permitir alternar/selecionar os objetos desse vetor (de um a um, seguindo a ordem do vetor)
	      -marcar o objeto selecionado (pintar com uma cor de destaque, o objeto inteiro com a mesma cor)
	      -definir teclas para avançar e para voltar no vetor
		-permitir avanco e retorno ciclico (indo do ultimo para o primeiro e vice-versa)
OK	    -[0.5] permitir apagar objetos desse vetor (usando o teclado)
	      -permitir apagar o objeto selecionado
	      -permitir apagar o ultimo objeto do vetor
OK	  -[1.5] permitir modificar os atributos do objeto selecionado
OK	    -[1.2] translação/rotação/escala (usando o mouse)
	      -forçar o usuario a modelar o cenario a partir da execucao do modelador (programa), e nao direto no codigo
OK	    -[0.3] desenhar ou não eixos do sist local (usando alguma tecla)
OK	  -[0.5] permitir salvar e carregar todos os objetos (todos os seus atributos) do vetor em/de arquivo

OK	-[0.5] Câmeras
OK	  -[0.2] incluir implementação pronta já disponibilizada nos exemplos (class Camera [CameraDistante e/ou CameraJogo])
	    -que permite movimentar a câmera pelo cenário
OK	  -[0.3] pré-estabelecer posições/orientações (pelo menos 3) de câmera específicas interessantes, de acordo com o cenário modelado
	    -permitir alternar entre essas posições/orientações pré-estabelecidas usando o teclado

OK	-[1.0] Modelar, salvar e carregar um cenário com um certo nível de detalhes (avaliacao subjetiva considerando complexidade e criatividade)
	  -basear-se nos exercícios (no dropbox) ou sugestões dadas (não modelar laboratório, nem sala de aula)
	    -pelo menos 5 objetos diferentes (alguns deles podem usar 3ds)
	  -pelo menos 2 objetos devem ser modelados usando glBegin(...);...glEnd();
	    -definir os glNormal3f(...); das faces (composta pelos vértices) adequadamente
	    -pelo menos 2 faces inclinadas (ou seja, não alinhadas aos eixos do sist de coordenadas local do objeto)
	      -usar transformacoes locais fixas pode facilitar

___________________

Parte 02) 2.5 pontos
Entrega e apresentação: 17/05/2019 (sex)

OK	-[1.0] Projeções
OK	  -alternar entre proj. perspectiva e proj. ortográfica
	    -usando alguma tecla
OK	  -definir posições/orientações de câmera específicas para simular todas as possíveis projeções clássicas
	    -de acordo com a classificação mostrada em sala
	      -pode focar em um objeto específico
OK	  -permitir alternar entre essas posições/orientações pré-estabelecidas usando o teclado
OK	  -explicar as diferenças entre as projeções apresentadas

OK	-[1.5] Sombras
OK	  -mostrar as sombras de todos os objetos
OK	    -permitir o usuário habilitar/desabilitar a sombra de um objeto específico selecionado
	  -implementar e explicar o uso das matrizes de sombra
OK	    -no chão (plano horizontal) e em duas paredes se encontrando (planos verticais)
OK	      -mostrar resultado da sombra em um canto de parede
OK	    -em um plano inclinado
OK	  -permitir o usuário alternar entre luz pontual próxima (proj. perspectiva) e luz distante (proj. oblíqua)
OK	  -permitir o usuário transladar o ponto de luz


___________________

Sugestão: usar C++, QtCreator, OpenGL, GLUT/Qt

